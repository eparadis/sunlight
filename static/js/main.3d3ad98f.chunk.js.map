{"version":3,"sources":["App.tsx","index.tsx"],"names":["Hello","Slider","props","className","label","value","type","min","max","onChange","event","update","Number","target","defaultValue","Result","calcZ","x","y","App","useState","setX","setY","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAgBA,IAAMA,EAAQ,WACZ,OACE,4BACE,mDAKAC,EAAS,SAACC,GAId,OACE,sBAAKC,UAAU,mBAAf,UACE,8BAAID,EAAME,MAAV,MAAmB,+BAAOF,EAAMG,WAChC,uBAAOC,KAAK,QAAQC,IAAKL,EAAMK,IAAKC,IAAKN,EAAMM,IAAKC,SANvC,SAACC,GAChBR,EAAMS,OAAOC,OAAOF,EAAMG,OAAOR,SAKyCS,aAAcZ,EAAMG,YAK5FU,EAAS,SAACb,GACd,OACE,8BACE,8BAAIA,EAAME,MAAV,MAAoBF,EAAMG,YAK1BW,EAAQ,SAACC,EAAUC,GACvB,OAAOD,EAAEC,GAGIC,EA7Cf,WAAgB,IAAD,EACKC,mBAAS,IADd,mBACNH,EADM,KACHI,EADG,OAEKD,mBAAS,KAFd,mBAENF,EAFM,KAEHI,EAFG,KAGb,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQQ,OAAQU,EAAMhB,MAAOY,EAAGb,MAAO,IAAKG,IAAK,GAAIC,IAAK,MAC1D,cAAC,EAAD,CAAQG,OAAQW,EAAMjB,MAAOa,EAAGd,MAAO,IAAKG,IAAK,GAAIC,IAAK,MAC1D,cAAC,EAAD,CAAQJ,MAAO,IAAKC,MAAOW,EAAMC,EAAGC,SCL1CK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.3d3ad98f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [x, setX] = useState(66)\n  const [y, setY] = useState(100)\n  return (\n    <div className=\"App\">\n      <Hello />\n      <Slider update={setX} value={x} label={\"X\"} min={12} max={120} />\n      <Slider update={setY} value={y} label={\"Y\"} min={12} max={120} />\n      <Result label={\"Z\"} value={calcZ(x, y)} />\n    </div>\n  );\n}\n\nconst Hello = () => {\n  return (\n    <p>\n      <code>HELLO WORLD!</code>\n    </p>\n  )\n}\n\nconst Slider = (props: { min: number, max: number, label: string, update: (v: number) => void, value: number })  => {\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.update(Number(event.target.value))\n  }\n  return (\n    <div className=\"adjustable-value\">\n      <p>{props.label} = <span>{props.value}</span></p>\n      <input type='range' min={props.min} max={props.max} onChange={onChange} defaultValue={props.value}  />\n    </div>\n  )\n}\n\nconst Result = (props: {label: string, value: number}) => {\n  return (\n    <div>\n      <p>{props.label} = {props.value}</p>\n    </div>\n  )\n}\n\nconst calcZ = (x: number,y:number) => {\n  return x+y\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}